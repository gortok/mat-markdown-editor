!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/forms"),require("@angular/platform-browser"),require("@angular/material"),require("@angular/common"),require("@angular/flex-layout")):"function"==typeof define&&define.amd?define(["exports","@angular/core","@angular/forms","@angular/platform-browser","@angular/material","@angular/common","@angular/flex-layout"],t):t(e.matMarkdownEditor={},e.ng.core,null,null,null,e.ng.common,null)}(this,function(e,t,n,o,i,r,a){"use strict";function l(e){return/^\s*\[[x ]]\s*/.test(e)?'<li style="list-style: none;">'+(e=e.replace(/^\s*\[ ]\s*/,'<i class="material-icons" style="vertical-align:top;margin-bottom:0.2em;margin-left:-0.8em;">check_box_outline_blank</i> ').replace(/^\s*\[x]\s*/,'<i class="material-icons" style="vertical-align:top;margin-bottom:0.2em;margin-left:-0.8em;">check_box</i> '))+"</li>":"<li>"+e+"</li>"}function d(e,t){return'<table class="table table-bordered">\n<thead>\n'+e+"</thead>\n<tbody>\n"+t+"</tbody>\n</table>\n"}function s(e,t){return'<pre style="padding: 0; border-radius: 0;"><code class="hljs '+t+'">'+(!(!t||!hljs.getLanguage(t))?hljs.highlight(t,e).value:e)+"</code></pre>"}var u=function(){function e(e,t,n){void 0===e&&(e=!1),void 0===t&&(t=-1),this.required=e,this.maxlength=t,this._domSanitizer=n,this.showPreviewPanel=!0,this.isFullScreen=!1,this._options={},this._onChange=function(e){},this._onTouched=function(){}}return Object.defineProperty(e.prototype,"markdownValue",{get:function(){return this._markdownValue||""},set:function(e){var t=this;this._markdownValue=e,this._onChange(e),this.options.preRender&&this.options.preRender instanceof Function&&(e=this.options.preRender(e)),null!==e&&void 0!==e&&(this._renderMarkTimeout&&clearTimeout(this._renderMarkTimeout),this._renderMarkTimeout=setTimeout(function(){var n=marked(e||"",t._markedOpt);t.previewHtml=t._domSanitizer.bypassSecurityTrustHtml(n)},100))},enumerable:!0,configurable:!0}),e.prototype.ngOnInit=function(){var e=this.aceEditorContainer.nativeElement;this.editor=ace.edit(e);var t=new marked.Renderer;t.code=s,t.table=d,t.listitem=l;var n={renderer:t,highlight:function(e){return hljs.highlightAuto(e).value}};this._markedOpt=Object.assign({},this.options.markedjsOpt,n)},e.prototype.ngAfterViewInit=function(){var e=this;if(this.editor.$blockScrolling=1/0,this.editor.getSession().setUseWrapMode(!0),this.editor.getSession().setMode("ace/mode/markdown"),this.editor.setValue(this.markdownValue||"",1),this.editor.setOption("scrollPastEnd",this._options.scrollPastEnd||0),this.options.enableBasicAutocompletion){var t=ace.require("ace/ext/language_tools");t.setCompleters([]),t.addCompleter(this.options.completer),this.editor.setOptions({enableBasicAutocompletion:this.options.enableBasicAutocompletion,enableLiveAutocompletion:this.options.enableLiveAutocompletion})}this.editor.on("change",function(){e.markdownValue=e.editor.getValue()})},e.prototype.writeValue=function(e){var t=this;setTimeout(function(){t.markdownValue=e,void 0!==e&&t.editor&&t.editor.setValue(e||"",1)},1)},e.prototype.registerOnChange=function(e){this._onChange=e},e.prototype.registerOnTouched=function(e){this._onTouched=e},e.prototype.validate=function(e){var t=null;return this.required&&0===this.markdownValue.length&&(t={required:!0}),this.maxlength>0&&this.markdownValue.length>this.maxlength&&(t={maxlength:!0}),t},e.prototype.onTogglePreview=function(e){this.showPreviewPanel=e},e.prototype.onFullScreen=function(e){this.isFullScreen=e,this.editor.resize()},e.prototype.previewPanelClick=function(e){!0!==this.options.enablePreviewContentClick&&(e.preventDefault(),e.stopImmediatePropagation())},e.prototype.ngOnDestroy=function(){return this.editor&&this.editor.destroy()},e.decorators=[{type:t.Component,args:[{selector:"mat-markdown-editor",template:'\n    <div\n      class="md-editor-container"\n      [class.fullscreen]="isFullScreen"\n      [class.border]="options.showBorder"\n      [class.md-editor-resizable]="options.resizable"\n      [style.height]="options.height"\n    >\n      <div class="md-layout">\n        <mat-markdown-editor-toolbar\n          [options]="options"\n          [editor]="editor"\n          [isFullScreen]="isFullScreen"\n          (onTogglePreview)="onTogglePreview($event)"\n          (onFullScreen)="onFullScreen($event)"\n        >\n        </mat-markdown-editor-toolbar>\n\n        <div class="editor-container">\n          <div\n            class="editor-panel-container"\n            [style.display]="options?.mode == \'preview\' ? \'none\' : null"\n          >\n            <div class="editor-panel">\n              <div class="ace-editor" #aceEditor></div>\n            </div>\n          </div>\n          <div\n            [style.display]="showPreviewPanel ? \'block\' : \'none\'"\n            (click)="previewPanelClick($event)"\n          >\n            <div class="preview-panel" [innerHTML]="previewHtml"></div>\n          </div>\n        </div>\n        <div class="md-footer" *ngIf="maxlength > 0 && options?.mode != \'preview\'">\n          <mat-toolbar>\n            <div class="text-right length-view">\n              {{ markdownValue?.length }} / {{ maxlength }}\n            </div>\n            <div class="resize-btn"></div>\n          </mat-toolbar>\n        </div>\n      </div>\n    </div>\n  ',styles:["\n    .md-editor-container{position:relative;height:100%;margin-bottom:15px}.md-editor-container.border{border:1px solid rgba(0,0,0,.1)}.md-editor-container.fullscreen{margin:0;position:fixed;border:0;top:0;left:0;width:100%!important;height:100%!important;z-index:99}.md-editor-container.md-editor-resizable:not(.fullscreen){resize:both;overflow:auto;display:inline-block;width:100%}.md-editor-container.md-editor-resizable:not(.fullscreen) .md-footer{z-index:-1}.md-editor-container .md-layout{height:100%;display:flex;flex-direction:column}.md-editor-container .md-layout .editor-container{flex:1;display:flex}.md-editor-container .md-layout .editor-container>div{flex:1}.md-editor-container .md-layout .editor-container .editor-panel,.md-editor-container .md-layout .editor-container .editor-panel-container{height:100%}.md-editor-container .md-layout .editor-container .editor-panel .ace-editor{height:100%;min-height:100%}.md-editor-container .md-layout .preview-panel{height:100%;border-left:1px solid rgba(0,0,0,.1);background-color:#fff;padding:10px;overflow-y:auto}.md-editor-container .md-layout .preview-panel .material-icons{vertical-align:top;margin-bottom:.2em;margin-left:-.8em}.md-editor-container .md-layout .md-footer .length-view{flex:1;padding:4px 2px 0;font-size:12px;line-height:16px}.md-editor-container .md-layout .md-footer .resize-btn{width:17px}\n  "],providers:[{provide:n.NG_VALUE_ACCESSOR,useExisting:t.forwardRef(function(){return e}),multi:!0},{provide:n.NG_VALIDATORS,useExisting:t.forwardRef(function(){return e}),multi:!0}]}]}],e.ctorParameters=function(){return[{type:Boolean,decorators:[{type:t.Attribute,args:["required"]}]},{type:Number,decorators:[{type:t.Attribute,args:["maxlength"]}]},{type:o.DomSanitizer}]},e.propDecorators={aceEditorContainer:[{type:t.ViewChild,args:["aceEditor"]}],options:[{type:t.Input}]},e}(),c=function(){function e(){}return e.prototype.sayHello=function(e){return"Hello "+(e||"Stanger")+"!"},e.decorators=[{type:t.Injectable}],e.ctorParameters=function(){return[]},e}(),p=function(){function e(){}return e.decorators=[{type:t.NgModule,args:[{imports:[i.MatAutocompleteModule,i.MatButtonModule,i.MatButtonToggleModule,i.MatCardModule,i.MatCheckboxModule,i.MatChipsModule,i.MatStepperModule,i.MatDatepickerModule,i.MatDialogModule,i.MatExpansionModule,i.MatGridListModule,i.MatIconModule,i.MatInputModule,i.MatListModule,i.MatMenuModule,i.MatNativeDateModule,i.MatPaginatorModule,i.MatProgressBarModule,i.MatProgressSpinnerModule,i.MatRadioModule,i.MatRippleModule,i.MatSelectModule,i.MatSidenavModule,i.MatSliderModule,i.MatSlideToggleModule,i.MatSnackBarModule,i.MatSortModule,i.MatTableModule,i.MatTabsModule,i.MatToolbarModule,i.MatTooltipModule],exports:[i.MatAutocompleteModule,i.MatButtonModule,i.MatButtonToggleModule,i.MatCardModule,i.MatCheckboxModule,i.MatChipsModule,i.MatStepperModule,i.MatDatepickerModule,i.MatDialogModule,i.MatExpansionModule,i.MatGridListModule,i.MatIconModule,i.MatInputModule,i.MatListModule,i.MatMenuModule,i.MatNativeDateModule,i.MatPaginatorModule,i.MatProgressBarModule,i.MatProgressSpinnerModule,i.MatRadioModule,i.MatRippleModule,i.MatSelectModule,i.MatSidenavModule,i.MatSliderModule,i.MatSlideToggleModule,i.MatSnackBarModule,i.MatSortModule,i.MatTableModule,i.MatTabsModule,i.MatToolbarModule,i.MatTooltipModule]}]}],e}(),m=function(){function e(e){this._renderer=e,this.onTogglePreview=new t.EventEmitter,this.onFullScreen=new t.EventEmitter,this.previewIsOpen=!0}return e.prototype.insertContent=function(e,t){if(this.editor){var n=this.editor.getSelectedText(),o=2,i="",r=!!n,a=this.editor.selection.getRange();switch(e){case"Bold":i="Bold Text",n="**"+(n||i)+"**";break;case"Italic":i="Italic Text",n="*"+(n||i)+"*",o=1;break;case"Heading":i="Heading",n="# "+(n||i);break;case"Reference":i="Reference",n="> "+(n||i);break;case"Link":n="["+n+"](http://)",o=1;break;case"Image":n="![](http://)";break;case"Ul":n="- "+(n||i);break;case"Ol":n="1. "+(n||i),o=3;break;case"Code":i="Source Code",n="```language\r\n"+(n||i)+"\r\n```",o=3;break;case"Custom":n=t,o=0}this.editor.session.replace(a,n),r||(a.start.column+=o,a.end.column=a.start.column+i.length,this.editor.selection.setRange(a)),this.editor.focus()}},e.prototype.togglePreview=function(){this.previewIsOpen=!this.previewIsOpen,this.onTogglePreview.emit(this.previewIsOpen),this.editorResize()},e.prototype.fullScreen=function(){this.isFullScreen=!this.isFullScreen,this._renderer.setStyle(document.body,"overflowY",this.isFullScreen?"hidden":"auto"),this.onFullScreen.emit(this.isFullScreen),this.editorResize()},e.prototype.editorResize=function(e){var t=this;void 0===e&&(e=100),this.editor&&(this._editorResizeTimer&&clearTimeout(this._editorResizeTimer),this._editorResizeTimer=setTimeout(function(){t.editor.resize(),t.editor.focus()},e))},e.decorators=[{type:t.Component,args:[{selector:"mat-markdown-editor-toolbar",template:'\n    <mat-toolbar\n      [color]="options.toolbarColor"\n      *ngIf="!options.hideToolbar && options?.mode != \'preview\'"\n      fxLayout="row"\n      fxLayoutAlign="start center"\n      fxLayoutGap="5px"\n    >\n      <div class="btn-group">\n        <button\n          mat-icon-button\n          type="button"\n          matTooltip="Bold"\n          (click)="insertContent(\'Bold\')"\n          *ngIf="!options?.hideIcons?.Bold"\n        >\n          <mat-icon aria-label="bold">format_bold</mat-icon>\n        </button>\n        <button\n          mat-icon-button\n          type="button"\n          matTooltip="Italic"\n          (click)="insertContent(\'Italic\')"\n          *ngIf="!options?.hideIcons?.Italic"\n        >\n          <mat-icon aria-label="italic">format_italic</mat-icon>\n        </button>\n        <button\n          mat-icon-button\n          type="button"\n          matTooltip="Heading"\n          (click)="insertContent(\'Heading\')"\n          *ngIf="!options?.hideIcons?.Heading"\n        >\n          <mat-icon aria-label="italic">format_size</mat-icon>\n        </button>\n        <button\n          mat-icon-button\n          type="button"\n          matTooltip="Refrence"\n          (click)="insertContent(\'Reference\')"\n          *ngIf="!options?.hideIcons?.Reference"\n        >\n          <mat-icon aria-label="quote">format_quote</mat-icon>\n        </button>\n        <mat-divider [vertical]="true"></mat-divider>\n      </div>\n\n      <div class="btn-group">\n        <button\n          mat-icon-button\n          type="button"\n          matTooltip="Link"\n          (click)="insertContent(\'Link\')"\n          *ngIf="!options?.hideIcons?.Link"\n        >\n          <mat-icon aria-label="link">link</mat-icon>\n        </button>\n        <button\n          mat-icon-button\n          type="button"\n          matTooltip="Image"\n          (click)="insertContent(\'Image\')"\n          *ngIf="!options?.hideIcons?.Image"\n        >\n          <mat-icon aria-label="Image">photo</mat-icon>\n        </button>\n        <mat-divider [vertical]="true"></mat-divider>\n      </div>\n\n      <div class="btn-group">\n        <button\n          mat-icon-button\n          type="button"\n          matTooltip="Unordered List"\n          (click)="insertContent(\'Ul\')"\n          *ngIf="!options?.hideIcons?.Ul"\n        >\n          <mat-icon aria-label="Unordered List">\n            format_list_bulleted\n          </mat-icon>\n        </button>\n        <button\n          mat-icon-button\n          type="button"\n          matTooltip="Ordered List"\n          (click)="insertContent(\'Ol\')"\n          *ngIf="!options?.hideIcons?.Ol"\n        >\n          <mat-icon aria-label="Unordered List">\n            format_list_numbered\n          </mat-icon>\n        </button>\n        <button\n          mat-icon-button\n          type="button"\n          matTooltip="Code Block"\n          (click)="insertContent(\'Code\')"\n          *ngIf="!options?.hideIcons?.Code"\n        >\n          <mat-icon aria-label="code">code</mat-icon>\n        </button>\n        <mat-divider [vertical]="true"></mat-divider>\n      </div>\n\n      <div class="btn-group">\n        <button\n          mat-icon-button\n          type="button"\n          [matTooltip]="previewIsOpen ? \'Hide Preview\' : \'Show Preview\'"\n          (click)="togglePreview()"\n          *ngIf="!options?.hideIcons?.TogglePreview"\n        >\n          <mat-icon aria-label="Unordered List">{{\n            previewIsOpen ? \'visibility_off\' : \'visibility\'\n          }}</mat-icon>\n        </button>\n      </div>\n\n      <span fxFlex></span>\n\n      <div class="btn-group pull-right hide-split">\n        <button\n          mat-icon-button\n          type="button"\n          matTooltip="Full Screen Mode"\n          [class.active]="isFullScreen"\n          (click)="fullScreen()"\n          *ngIf="!options?.hideIcons?.FullScreen && !isFullScreen"\n        >\n          <mat-icon aria-label="fullscreen">fullscreen</mat-icon>\n        </button>\n        <button\n          mat-icon-button\n          type="button"\n          matTooltip="Exit Full Screen Mode"\n          [class.active]="isFullScreen"\n          (click)="fullScreen()"\n          *ngIf="!options?.hideIcons?.FullScreen && isFullScreen"\n        >\n          <mat-icon aria-label="fullscreen">fullscreen_exit</mat-icon>\n        </button>\n      </div>\n    </mat-toolbar>\n  ',styles:["\n\n  "]}]}],e.ctorParameters=function(){return[{type:t.Renderer2}]},e.propDecorators={options:[{type:t.Input}],isFullScreen:[{type:t.Input}],editor:[{type:t.Input}],onTogglePreview:[{type:t.Output}],onFullScreen:[{type:t.Output}]},e}(),h=function(){function e(){}return e.forRoot=function(){return{ngModule:e,providers:[c]}},e.decorators=[{type:t.NgModule,args:[{imports:[r.CommonModule,n.FormsModule,p,n.ReactiveFormsModule,a.FlexLayoutModule],exports:[u],declarations:[u,m]}]}],e}();e.MatMarkdownEditorComponent=u,e.LibService=c,e.MatMarkdownEditorModule=h,e.ɵb=m,e.ɵa=p,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=mat-markdown-editor.umd.min.js.map
